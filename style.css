
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Md Syful Islam Siyam | Professional Portfolio</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap');
    /* Reset & base */
    * {
      margin: 0; padding: 0; box-sizing: border-box;
    }
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #1a202c, #2d3748);
      color: #e2e8f0;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 2rem 1rem;
    }
    h1, h2 {
      font-weight: 600;
    }
    a {
      color: #63b3ed;
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
    /* Container */
    .container {
      width: 100%;
      max-width: 900px;
      background: #2a2f45;
      border-radius: 16px;
      box-shadow: 0 8px 24px rgba(0,0,0,0.5);
      overflow: hidden;
    }
    /* Header */
    header {
      text-align: center;
      padding: 2rem 1rem 1rem;
      border-bottom: 2px solid #4c51bf;
      position: relative;
    }
    header img {
      width: 140px;
      height: 140px;
      border-radius: 50%;
      border: 4px solid #667eea;
      object-fit: cover;
      box-shadow: 0 0 20px #667eeaaa;
      transition: transform 0.3s ease;
      cursor: pointer;
    }
    header img:hover {
      transform: scale(1.05) rotate(5deg);
    }
    header h1 {
      margin-top: 1rem;
      font-size: 2.5rem;
      color: #a3bffa;
      text-shadow: 0 0 6px #4c51bf;
    }
    /* Tabs navigation */
    .tabs {
      display: flex;
      background: #1f2633;
    }
    .tab {
      flex: 1;
      padding: 1rem 0;
      text-align: center;
      cursor: pointer;
      font-weight: 600;
      color: #94a3b8;
      user-select: none;
      transition: background-color 0.3s, color 0.3s;
      border-bottom: 3px solid transparent;
    }
    .tab:hover {
      color: #a3bffa;
      background-color: #2d3748;
    }
    .tab.active {
      color: #667eea;
      border-bottom: 3px solid #667eea;
      background-color: #2d3748;
    }
    /* Tab content */
    .tab-content {
      padding: 2rem;
      min-height: 300px;
      background: #1a202c;
      color: #cbd5e1;
      position: relative;
    }
    /* About & others styling */
    .about p, .projects p, .future-goals p {
      line-height: 1.6;
      font-size: 1.1rem;
    }
    /* Projects */
    .projects-list {
      list-style: none;
      margin-top: 1rem;
    }
    .projects-list li {
      margin-bottom: 1rem;
      padding: 1rem;
      background: #2d3748;
      border-radius: 12px;
      box-shadow: 0 0 8px #4c51bf88;
      transition: transform 0.3s ease;
    }
    .projects-list li:hover {
      transform: translateY(-5px);
      box-shadow: 0 0 20px #667eeaaa;
    }
    /* Skills tab container */
    .skills-tab {
      position: relative;
      height: 320px;
      background: #2d3748;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: inset 0 0 40px #4c51bf33;
    }
    /* Skill balloons */
    .balloon {
      position: absolute;
      padding: 0.6rem 1.4rem;
      background: linear-gradient(145deg, #667eea, #4c51bf);
      border-radius: 9999px;
      color: white;
      font-weight: 600;
      font-size: 1rem;
      user-select: none;
      box-shadow: 0 0 10px #667eeacc;
      cursor: default;
      white-space: nowrap;
      pointer-events: none; /* Don't interfere with mouse */
      will-change: transform;
      /* will animate with JS */
    }
    /* Contact */
    .contact-form {
      max-width: 500px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    input, textarea {
      padding: 0.8rem 1rem;
      border-radius: 8px;
      border: none;
      font-size: 1rem;
      font-family: 'Inter', sans-serif;
      resize: vertical;
    }
    input:focus, textarea:focus {
      outline: 2px solid #667eea;
      background-color: #1a202c;
      color: white;
    }
    button {
      padding: 0.9rem;
      font-weight: 600;
      font-size: 1.1rem;
      border: none;
      border-radius: 8px;
      background: #667eea;
      color: white;
      cursor: pointer;
      box-shadow: 0 0 10px #667eeaaa;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background: #4c51bf;
      box-shadow: 0 0 20px #4c51bfcc;
    }
    /* Footer */
    footer {
      margin-top: 3rem;
      color: #94a3b8;
      font-size: 0.9rem;
      user-select: none;
      text-align: center;
    }
  </style>
</head>
<body>

  <div class="container" role="main">

    <header>
      <img src="syful-profile.jpg" alt="Md Syful Islam Siyam" />
      <h1>Md Syful Islam Siyam</h1>
    </header>

    <!-- Tabs Navigation -->
    <nav role="tablist" aria-label="Portfolio sections" class="tabs">
      <button class="tab active" role="tab" aria-selected="true" aria-controls="about-tab" id="about-tab-btn">About</button>
      <button class="tab" role="tab" aria-selected="false" aria-controls="skills-tab" id="skills-tab-btn">Skills</button>
      <button class="tab" role="tab" aria-selected="false" aria-controls="projects-tab" id="projects-tab-btn">Projects</button>
      <button class="tab" role="tab" aria-selected="false" aria-controls="contact-tab" id="contact-tab-btn">Contact</button>
    </nav>

    <!-- Tabs Content -->
    <section id="about-tab" role="tabpanel" tabindex="0" aria-labelledby="about-tab-btn" class="tab-content about">
      <h2>About Me</h2>
      <p>I'm Md Syful Islam Siyam, a Computer Science and Engineering student passionate about cybersecurity, real-time systems, and web development. Currently preparing for an MSc in Cybersecurity, I focus on building secure and scalable technology solutions.</p>
      <p>I enjoy programming in C, C++, Python, HTML, CSS, and JavaScript, and I am committed to clean code and ethical hacking. I actively seek internships and collaboration opportunities worldwide.</p>
    </section>

    <section id="skills-tab" role="tabpanel" tabindex="0" aria-labelledby="skills-tab-btn" class="tab-content skills-tab" hidden>
      <!-- Balloons container -->
      <!-- Skill balloons will be generated by JS -->
    </section>

    <section id="projects-tab" role="tabpanel" tabindex="0" aria-labelledby="projects-tab-btn" class="tab-content projects" hidden>
      <h2>Projects</h2>
      <ul class="projects-list">
        <li><strong>Real-Time Bus Tracker:</strong> Embedded C & microcontroller-based live GPS transit tracking system.</li>
        <li><strong>Portfolio Website:</strong> Modern, responsive portfolio built with Tailwind CSS and JS.</li>
        <li><strong>Cybersecurity Toolkit:</strong> Python tools for ethical hacking, including port scanning & packet inspection.</li>
      </ul>
    </section>

    <section id="contact-tab" role="tabpanel" tabindex="0" aria-labelledby="contact-tab-btn" class="tab-content contact" hidden>
      <h2>Contact Me</h2>
      <form action="https://formspree.io/f/mayvnvyl" method="POST" class="contact-form" aria-label="Contact form">
        <input type="text" name="name" placeholder="Your Name" required autocomplete="name" />
        <input type="email" name="email" placeholder="Your Email" required autocomplete="email" />
        <textarea name="message" rows="4" placeholder="Your Message" required></textarea>
        <button type="submit">Send Message</button>
      </form>
    </section>

  </div>

  <footer>
    &copy; 2025 Md Syful Islam Siyam | Designed with care
  </footer>

  <script>
    // Tab switching logic
    const tabs = document.querySelectorAll('.tab');
    const tabPanels = document.querySelectorAll('[role="tabpanel"]');
    tabs.forEach(tab => {
      tab.addEventListener('click', () => {
        // Remove active from all tabs
        tabs.forEach(t => {
          t.classList.remove('active');
          t.setAttribute('aria-selected', 'false');
        });
        // Hide all panels
        tabPanels.forEach(panel => panel.hidden = true);
        // Activate clicked tab and panel
        tab.classList.add('active');
        tab.setAttribute('aria-selected', 'true');
        const panelId = tab.getAttribute('aria-controls');
        const panel = document.getElementById(panelId);
        panel.hidden = false;
        panel.focus();
      });
    });

    // Skill balloons data
    const skills = [
      'C', 'C++', 'Python', 'HTML', 'CSS', 'JavaScript', 
      'Cybersecurity', 'Real-Time Systems', 'Ethical Hacking', 'Clean Code', 'Scalable Design'
    ];

    const skillsTab = document.getElementById('skills-tab');

    // Create balloons and append
    skills.forEach(skill => {
      const balloon = document.createElement('div');
      balloon.classList.add('balloon');
      balloon.textContent = skill;
      skillsTab.appendChild(balloon);
    });

    // Floating animation
    const balloons = document.querySelectorAll('.balloon');
    const containerRect = skillsTab.getBoundingClientRect();

    // Store positions and directions
    const balloonsState = [];

    balloons.forEach((balloon, i) => {
      // Random start position inside container
      const startX = Math.random() * (skillsTab.clientWidth - balloon.offsetWidth);
      const startY = Math.random() * (skillsTab.clientHeight - balloon.offsetHeight);
      // Random movement velocity - smaller for smooth drifting
      const velocityX = (Math.random() - 0.5) * 0.4;
      const velocityY = (Math.random() - 0.5) * 0.4;

      balloon.style.transform = `translate(${startX}px, ${startY}px)`;

      balloonsState.push({balloon, x: startX, y: startY, vx: velocityX, vy: velocityY});
    });

    function animateBalloons() {
      balloonsState.forEach(state => {
        state.x += state.vx;
        state.y += state.vy;

        // Bounce from edges inside container
        if (state.x < 0) {
          state.x = 0;
          state.vx = -state.vx;
        } else if (state.x > skillsTab.clientWidth - state.balloon.offsetWidth) {
          state.x = skillsTab.clientWidth - state.balloon.offsetWidth;
          state.vx = -state.vx;
        }
        if (state.y < 0) {
          state.y = 0;
          state.vy = -state.vy;
        } else if (state.y > skillsTab.clientHeight - state.balloon.offsetHeight) {
          state.y = skillsTab.clientHeight - state.balloon.offsetHeight;
          state.vy = -state.vy;
        }

        state.balloon.style.transform = `translate(${state.x}px, ${state.y}px)`;
      });
      requestAnimationFrame(animateBalloons);
    }
    animateBalloons();
  </script>
</body>
</html>
